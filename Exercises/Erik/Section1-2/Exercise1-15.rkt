#lang planet neil/sicp

;; Exercise 1.15. The sine of an angle (specified in radians) can be
;; computed by making use of the approximation 
;;
;;     sin(x) ~= x 
;;
;; if x is sufficiently small, and the trigonometric identity
;;
;;     sin(x) = 3 * sin(x / 3) - 4 * sin^3(x / 3)
;;
;; to reduce the size of the argument of sin. (For purposes of this
;; exercise an angle is considered "sufficiently small" if its
;; magnitude is not greater than 0.1 radians.) These ideas are
;; incorporated in the following procedures:

(define (cube x) (* x x x))
(define (p x) (- (* 3 x) (* 4 (cube x))))
(define (sine angle)
  (if (not (> (abs angle) 0.1))
      angle
      (p (sine (/ angle 3.0)))))

;; a. How many times is the procedure p applied when (sine 12.15) is
;; evaluated?

;; b. What is the order of growth in space and number of steps (as a
;; function of a) used by the process generated by the sine procedure
;; when (sine a) is evaluated?


;; Answer
;;;;;;;;;

;; a.
;;
;; Since you're dividing by 3 with each iteration, we must solve for n
;; in the equation:
;;
;;     12.15 / 3^n < 0.1
;;
;; Which solves to 4.37, requiring 5 iterations. That is:
;;
;; (/ 12.15 (expt 3 4))
;; ; 0.15
;; (/ 12.15 (expt 3 5))
;; ; 0.05


;; b.
;;
;; The growth in steps is \theta(log(n))
;;   - This is because you're cutting by a third with each iteration, 
;;     an exponential decrease.
;;
;; The growth in space is \theta(log(n))
;;   - Each step grows the stack by one, so space is equal to steps

